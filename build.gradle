plugins {
    id 'org.springframework.boot' version '2.7.18'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'java'
    id 'jacoco'
    id 'com.github.spotbugs' version '6.0.6'
}

group = 'uk.nhs.prm.deductions'
version = '0.0.1-SNAPSHOT'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

//Without this task two jars are built, the additional "-plain.jar" is not needed
// for more details refer to: https://docs.spring.io/spring-boot/docs/current/gradle-plugin/reference/htmlsingle/#packaging-executable.and-plain-archives
jar {
    enabled = false
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-aop'

    implementation 'org.yaml:snakeyaml:2.2'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.15'
    implementation 'net.logstash.logback:logstash-logback-encoder:6.6'
    implementation 'org.bouncycastle:bcpkix-jdk15on:1.70'
    implementation 'com.nimbusds:nimbus-jose-jwt:9.37.3'
    implementation 'org.jetbrains:annotations:20.1.0'
    implementation 'org.json:json:20231013'
    implementation 'org.apache.httpcomponents:httpclient:4.5.14'

    implementation('io.netty:netty-buffer') { version { strictly '4.1.104.Final' } }
    implementation('io.netty:netty-codec') { version { strictly '4.1.104.Final' } }
    implementation('io.netty:netty-codec-http') { version { strictly '4.1.104.Final' } }
    implementation('io.netty:netty-codec-http2') { version { strictly '4.1.104.Final' } }
    implementation('io.netty:netty-common') { version { strictly '4.1.104.Final' } }
    implementation('io.netty:netty-handler') { version { strictly '4.1.104.Final' } }
    implementation('io.netty:netty-resolver') { version { strictly '4.1.104.Final' } }
    implementation('io.netty:netty-transport') { version { strictly '4.1.104.Final' } }
    implementation('io.netty:netty-transport-classes-epoll') { version { strictly '4.1.104.Final' } }
    implementation('io.netty:netty-transport-native-unix-common') { version { strictly '4.1.104.Final' } }

    implementation platform('software.amazon.awssdk:bom:2.30.31')
    implementation 'software.amazon.awssdk:ssm'

    compileOnly 'org.projectlombok:lombok:1.18.30'

    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'com.github.tomakehurst:wiremock-jre8:2.35.1'
}

springBoot {
    mainClass = 'uk.nhs.prm.deductions.pdsadaptor.PdsAdaptorApplication'
}

sourceSets {
    integration {
        compileClasspath += sourceSets.main.output
        compileClasspath += sourceSets.test.output
        runtimeClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.test.output
    }
}

configurations {
    integrationImplementation.extendsFrom testImplementation
    integrationRuntimeOnly.extendsFrom testRuntimeOnly
}

test {
    testLogging.showStandardStreams = true
}

tasks.withType(Test) {
    useJUnitPlatform()
}

task integration(type: Test) {
    testClassesDirs = sourceSets.integration.output.classesDirs
    classpath = sourceSets.integration.runtimeClasspath
    shouldRunAfter test
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    shouldRunAfter integration
}

jacocoTestCoverageVerification {
    dependsOn jacocoTestReport

    violationRules {
        rule {
            limit {
                minimum = 0.7
            }
        }
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: '**/model/**')
        }))
    }
}

spotbugsMain {
    ignoreFailures = true
    reports {
        html {
            enabled = true
            destination = file("$buildDir/reports/spotbugs/main/spotbugs.html")
            stylesheet = 'fancy-hist.xsl'
        }
    }
}

spotbugsTest {
    enabled = false
}

spotbugsIntegration {
    ignoreFailures = true
    reports {
        html {
            enabled = true
            destination = file("$buildDir/reports/spotbugs/integration/spotbugs.html")
            stylesheet = 'fancy-hist.xsl'
        }
    }
}

check.dependsOn integration

test.outputs.upToDateWhen {false}
integration.outputs.upToDateWhen {false}
