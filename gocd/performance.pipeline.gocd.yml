format_version: 4

common:
  pipeline-template: &perf-run-pipeline-template
    group: performance
    label_template: '${COUNT}-${git[:8]}'
    materials:
      git:
        type: configrepo
    stages:
      - performance:
          clean_workspace: true
          approval: manual
          jobs:
            performance_test:
              artifacts:
                - build:
                    source: build/test-results/performance/
                - build:
                    source: build/reports/performance/
              tabs:
                performance: build/reports/performance/report.html
              resources:
                - docker
              tasks:
                - exec:
                    command: /bin/bash
                    arguments:
                      - -c
                      - ./tasks test_performance
  plan_job: &plan_job
    resources:
      - docker
    artifacts:
      - build:
          source: terraform/nhs_deployment.tfplan
          destination: terraform/
    tasks:
      - exec:
          command: /bin/bash
          arguments:
            - -c
            - ./tasks tf_plan create
  deploy_job: &deploy_job
    resources:
      - docker
    tasks:
      - fetch:
          stage: plan
          job: plan
          source: terraform/nhs_deployment.tfplan
          destination: terraform/
          is_file: yes
      - exec:
          command: /bin/bash
          arguments:
            - -c
            - ./tasks tf_apply
      - exec:
          command: /bin/bash
          arguments:
            - -c
            - ./tasks wait_ecs
  common_stages: &common_deploy_stages
    - promote_docker_image:
        resources:
          - docker
        clean_workspace: true
        tasks:
          - exec:
              command: /bin/bash
              arguments:
                - -c
                - ./tasks promote_docker_image
    - plan:
        clean_workspace: true
        jobs:
          plan: *plan_job
    - deploy:
        clean_workspace: true
        jobs:
          deploy: *deploy_job

pipelines:
  pds-adaptor-perf-dev:
    <<: *perf-run-pipeline-template
    timer:
      spec: 0 0 22 ? * MON,TUE,WED,THU,FRI *
    environment_variables:
      NHS_ENVIRONMENT: dev
      RUN_TIME: 120s
      USERS: 10
      MIN_WAIT_SECONDS: 4
      MAX_WAIT_SECONDS: 5
  pds-adaptor-perf-test:
    <<: *perf-run-pipeline-template
    timer:
      spec: 0 0 23 ? * MON,TUE,WED,THU,FRI *
    environment_variables:
      NHS_ENVIRONMENT: test
      RUN_TIME: 60s
      USERS: 10
      MIN_WAIT_SECONDS: 4
      MAX_WAIT_SECONDS: 5
  pds-adaptor-perf-pre-prod:
    <<: *perf-run-pipeline-template
    timer:
      spec: 0 0 0 ? * MON,TUE,WED,THU,FRI *
    environment_variables:
      NHS_ENVIRONMENT: pre-prod
      RUN_TIME: 60s
      USERS: 10
      MIN_WAIT_SECONDS: 4
      MAX_WAIT_SECONDS: 5
  pds-adaptor.perf:
    group: performance
    label_template: '${COUNT}-${git[:8]}'
    materials:
      git:
        type: configrepo
        blacklist:
          - docs/**/*.*
      app:
        pipeline: pds-adaptor
        stage: promote.test
    environment_variables:
      NHS_ENVIRONMENT: perf
    stages: *common_deploy_stages
