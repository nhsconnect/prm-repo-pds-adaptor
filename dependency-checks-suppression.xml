<?xml version="1.0" encoding="UTF-8"?>
<suppressions xmlns="https://jeremylong.github.io/DependencyCheck/dependency-suppression.1.3.xsd">
    <suppress>
        <notes><![CDATA[
      false positive: https://github.com/jeremylong/DependencyCheck/issues/3865
      file name: netty-tcnative-classes-2.0.46.Final.jar
      ]]></notes>
        <packageUrl regex="true">^pkg:maven/io\.netty/netty\-tcnative\-classes@.*$</packageUrl>
        <cpe>cpe:/a:netty:netty</cpe>
    </suppress>
    <suppress>
        <notes><![CDATA[
     Suppress this CVE that is a wontfix from spring because it is about how spring provides
     a java deserialisation and invocation endpoint implementation that if you expose
     unauthenticated would be risky.  They argue that's a you (app) problem.
     ]]></notes>
        <packageUrl regex="true">^pkg:maven/org\.springframework/spring\-.*$</packageUrl>
        <cve>CVE-2016-1000027</cve>
    </suppress>
    <suppress>
        <notes><![CDATA[
     Spring-framework libraries always have groupId org.springframework with no further extension, so suppress the
     spring_framework package identification for old and third party libs that merely include spring jars
     ]]></notes>
        <packageUrl regex="true">^pkg:maven/org\.springframework/spring\-.*$</packageUrl>
        <cpe>cpe:/a:springsource:spring_framework</cpe>
        <cpe>cpe:/a:pivotal_software:spring_framework</cpe>
        <cpe>cpe:/a:vmware:spring_framework</cpe>
    </suppress>
    <suppress>
        <notes><![CDATA[
     Suppress incorrect assignment of CVE-2020-5408 to more recent version, spring-security-crypto is @ v5.7.1
     at time of suppression, latest know vulnerable version 5.3.x
     ]]></notes>
        <packageUrl regex="true">^pkg:maven/org\.springframework\.security/spring\-security\-crypto@.*$</packageUrl>
        <vulnerabilityName>CVE-2020-5408</vulnerabilityName>
    </suppress>
    <suppress>
        <notes><![CDATA[
     file name: spring-boot-starter-security-2.7.0.jar

     suppressing misidentification of spring boot starter security as as vmware packages
     at point of suppression leading to false positive on CVE-2022-22978
     ]]></notes>
        <packageUrl regex="true">^pkg:maven/org\.springframework\.boot/spring\-boot\-starter\-security@.*$</packageUrl>
        <cpe>cpe:/a:vmware:spring_security</cpe>
        <cpe>cpe:/a:vmware:spring_boot</cpe>
    </suppress>
    <suppress>
        <notes><![CDATA[
      false positive for commons_net
      file name: commons-codec-1.15.jar
   ]]></notes>
        <packageUrl regex="true">^pkg:maven/commons\-codec/commons\-codec@.*$</packageUrl>
        <cve>CVE-2021-37533</cve>
    </suppress>
    <suppress>
        <notes><![CDATA[
      false positive for commons_net
      file name: commons-text-1.10.0.jar
   ]]></notes>
        <packageUrl regex="true">^pkg:maven/org\.apache\.commons/commons\-text@.*$</packageUrl>
        <cve>CVE-2021-37533</cve>
    </suppress>
    <suppress>
        <notes><![CDATA[
      false positive as spring boot uses safe constructor in snakeyaml, see:

      https://github.com/spring-projects/spring-boot/issues/33457

      file name: snakeyaml-1.33.jar
   ]]></notes>
        <packageUrl regex="true">^pkg:maven/org\.yaml/snakeyaml@.*$</packageUrl>
        <vulnerabilityName>CVE-2022-1471</vulnerabilityName>
    </suppress>
    <suppress>
        <notes><![CDATA[
   false positive CVEs not related to package
   ]]></notes>
        <packageUrl regex="true">^pkg:maven/org\.yaml/snakeyaml@.*$</packageUrl>
        <cve>CVE-2022-3064</cve>
        <cve>CVE-2021-4235</cve>
    </suppress>
    <suppress>
        <notes><![CDATA[
      6.5.0 version is only used by spotbugs who do not exercise vulnerability:

      https://github.com/spotbugs/spotbugs/discussions/2251

      file name: bcel-6.5.0.jar
   ]]></notes>
        <packageUrl regex="true">^pkg:maven/org\.apache\.bcel/bcel@.*$</packageUrl>
        <vulnerabilityName>CVE-2022-42920</vulnerabilityName>
    </suppress>
    <suppress>
        <notes><![CDATA[
        false positive due to incorrect CPE targeting 4.1.86 not 4.1.86.Final
   file name: netty-*-4.1.86.Final.jar
   ]]></notes>
        <packageUrl regex="true">^pkg:maven/io\.netty/netty\-.*4.1.86.Final$</packageUrl>
        <cpe>cpe:/a:netty:netty</cpe>
    </suppress>
    <suppress>
        <notes><![CDATA[
        false positive CVE-2021-4277 is not related to package
   ]]></notes>
        <packageUrl regex="true">^pkg:maven/org\.latencyutils/LatencyUtils@.*$</packageUrl>
        <cve>CVE-2021-4277</cve>
    </suppress>
    <suppress>
        <notes><![CDATA[
        false positive CVE-2021-4277 is not related to package
   ]]></notes>
        <packageUrl regex="true">^pkg:maven/software\.amazon\.awssdk/json\-utils@.*$</packageUrl>
        <cve>CVE-2021-4277</cve>
    </suppress>
    <suppress>
        <notes><![CDATA[
        false positive CVE-2021-4277 is not related to package
   ]]></notes>
        <packageUrl regex="true">^pkg:maven/software\.amazon\.awssdk/utils@.*$</packageUrl>
        <cve>CVE-2021-4277</cve>
    </suppress>
    <suppress>
	<notes><![CDATA[
         false positive CVE refers specifically to hutool not this generic json package
         file name: json-20211205.jar
        ]]></notes>
        <packageUrl regex="true">^pkg:maven/org\.json/json@.*$</packageUrl>
        <vulnerabilityName>CVE-2022-45688</vulnerabilityName>
    </suppress>
</suppressions>
